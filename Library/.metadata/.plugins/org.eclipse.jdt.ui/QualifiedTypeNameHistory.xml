<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.hibernate.SessionFactory"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.stub.generated.libraryService.BookSearchService"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.stub.generated.libraryService.BookDto"/>
<fullyQualifiedTypeName name="org.apache.commons.lang3.StringUtils"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.exposure.service.authentification.AuthentificationService"/>
<fullyQualifiedTypeName name="org.springframework.web.context.support.SpringBeanAutowiringSupport"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.model.exception.NotFoundException"/>
<fullyQualifiedTypeName name="java.lang.ClassCastException"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.model.exception.DataBaseException"/>
<fullyQualifiedTypeName name="java.lang.Throwable"/>
<fullyQualifiedTypeName name="org.hibernate.criterion.Projection"/>
<fullyQualifiedTypeName name="org.hibernate.Criteria"/>
<fullyQualifiedTypeName name="javax.persistence.criteria.CriteriaBuilder"/>
<fullyQualifiedTypeName name="org.hibernate.criterion.Projections"/>
<fullyQualifiedTypeName name="org.hibernate.criterion.Restrictions"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.model.exception.AuthentificationException"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.stub.generated.bookServ.BookDto"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.stub.generated.authServ.AuthentificationService"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.stub.generated.authServ.AuthentificationServiceImplService"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.business.impl.manager.AbstractManagerServiceAccess"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.business.contract.manager.BookDtoManager"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.business.contract.handler.ManagerHandler"/>
<fullyQualifiedTypeName name="javax.inject.Named"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="org.apache.struts2.interceptor.SessionAware"/>
<fullyQualifiedTypeName name="org.apache.struts2.interceptor.ServletRequestAware"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.model.exception.fault.AuthentificationFault"/>
<fullyQualifiedTypeName name="javax.persistence.NoResultException"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.consumer.contract.dao.UserAccountDao"/>
<fullyQualifiedTypeName name="javax.jws.WebMethod"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.business.dto.UserAccountDto"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.model.user.UserAccount"/>
<fullyQualifiedTypeName name="javax.transaction.Transaction"/>
<fullyQualifiedTypeName name="org.hibernate.Transaction"/>
<fullyQualifiedTypeName name="org.hibernate.HibernateException"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="javax.persistence.PersistenceException"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.stub.generated.authServ.UserAccountDto"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWebapp.business.contract.manager.UserAccountDtoManager"/>
<fullyQualifiedTypeName name="com.opensymphony.xwork2.ActionSupport"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.DelegatingPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.scrypt.SCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.EnableLoadTimeWeaving"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="com.philippe75.libraryWS.business.contract.handler.ManagerHandler"/>
<fullyQualifiedTypeName name="javax.inject.Inject"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
</qualifiedTypeNameHistroy>
